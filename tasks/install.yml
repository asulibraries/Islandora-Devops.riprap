
- name: Check for Existing microservice
  stat:
    path: "{{ riprap_home }}/riprap/vendor"
  register: riprap

- name: Get Riprap Microservice from Github
  git:
    repo: https://github.com/mjordan/riprap.git
    dest: "{{ riprap_home }}/riprap"
    force: yes
  when: riprap.stat.exists == False

- name: Change riprap directory ownership, group and permissions
  file:
    path: "{{ riprap_home }}/riprap"
    owner:  "{{ webserver_app_user }}"
    group:  "{{ webserver_app_user }}"
    mode: '0755'
    recurse: True

- name: Composer Install Riprap Microservice
  composer:
    command: install
    working_dir: "{{ riprap_home }}/riprap"
  ignore_errors: yes
  when: riprap.stat.exists == False
  become_user:  "{{ webserver_app_user }}"

- name: Open permissions on riprap cache
  file:
    path: ":{{ riprap_home }}/riprap/var/cache"
    owner:  "{{ webserver_app_user }}"
    group:  "{{ webserver_app_user }}"
    mode: '0777'
    recurse: True

- name: Composer Update Riprap Microservice
  command: "composer update"
  args:
    chdir: "{{ riprap_home }}/riprap"

  become_user:  "{{ webserver_app_user }}"

- name: Install Drupal Islandora Riprap module from Github
  git:
    repo: https://github.com/mjordan/islandora_riprap.git
    dest: "{{ drupal_core_path }}/modules/contrib/islandora_riprap"
    force: yes

- name: Enable Riprap drupal module
  command: "{{ drush_path }} --root {{ drupal_core_path }} -y en islandora_riprap"

- name: Create Config directory
  file:
    path: "{{ drupal_core_path }}/modules/contrib/islandora_riprap/config/optional"
    state: directory
    owner: "{{ webserver_app_user }}"
    group: "{{ webserver_app_user }}"
    mode: 0755


- name: Add RDM config
  copy:
    dest: "{{ drupal_core_path }}/modules/contrib/islandora_riprap/config/optional/slandora_riprap.settings.yml"
    content: |
      riprap_rest_endpoint: 'http://localhost/api/fixity'
      number_of_events: '10'
      gemini_rest_endpoint: 'http://localhost/gemini'
      use_drupal_urls: 0
      show_riprap_warnings: 0

- name: Enable JSON:API module (not currently enabled by default
  command: "{{ drush_path }} --root {{ drupal_core_path }} -y en jsonapi"




- name: Add Islandora Ansible Routes
  blockinfile:
    path: "{{ riprap_home }}/riprap/config/routes.yaml"
    create: no
    block: |
      app_riprap_fixity_events_read_is_islandora:
          path: /
          controller: App\Controller\FixityController::read
          methods: [GET, HEAD]

      app_riprap_fixity_events_add_islandora:
          path: /
          controller: App\Controller\FixityController::add
          methods: [POST]

      app_riprap_fixity_events_update_islandora:
          path: /
          controller: App\Controller\FixityController::update
          methods: [PATCH]

- name: Edit .env file
  lineinfile:
    path: "{{ riprap_home }}/riprap/.env"
    regexp: 'DATABASE_URL=sqlite:///%kernel.project_dir%/var/data.db'
    line: 'DATABASE_URL=mysql://{{ drupal_db_user}}:{{ drupal_db_password }}@127.0.0.1:3306/{{ drupal_db_name }}'

- name: Edit Drupal's Setting file
  lineinfile:
    path: "{{ settings_dir }}/settings.php"
    line: "$settings['file_private_path'] = '{{ private_file_dir }}';"

- name: Build config file
  blockinfile:
    path: "{{ private_file_dir }}/riprap_config/islandora_riprap_config.yml"
    create: yes
    block: |
      # Riprap config file for using Islandora/database plugins.

      ####################
      # General settings #
      ####################

      fixity_algorithm: sha256

      ###########
      # Plugins #
      ###########

      plugins.fetchresourcelist: ['PluginFetchResourceListFromDrupal']
      drupal_baseurl: '{{ crayfish_drupal_base_url }}'
      # admin/islandora
      jsonapi_authorization_headers: ['Authorization: Basic YWRtaW46aXNsYW5kb3Jh']
      drupal_media_auth: ['{{ drupal_account_name }}', '{{ drupal_account_pass }}']
      drupal_content_types: ['islandora_rdm_dataset']
      drupal_media_tags: ['/taxonomy/term/17']
      use_fedora_urls: true
      gemini_endpoint: '{{ crayfish_gemini_base_url }}'
      gemini_auth_header: 'Bearer islandora'
      # Can be a maximum of 50.
      jsonapi_page_size: 50
      # The number of resources to check in one Riprap run; if absent, will use
      # value defined in jsonapi_page_size. Must be a multiple of number specified
      # in jsonapi_page_size.
      max_resources: 1000
      jsonapi_pager_data_file_path: '{{ riprap_home }}/riprap/var/fetchresourcelist.from.drupal.pager.txt'

      plugins.fetchdigest: PluginFetchDigestFromFedoraAPI
      fedoraapi_method: HEAD
      fedoraapi_digest_header_leader_pattern: "^.+="

      plugins.persist: PluginPersistToDatabase

      plugins.postcheck: ['PluginPostCheckCopyFailures']
      # Absolute or relative to the Riprap application directory.
      failures_log_path: '/tmp/riprap_failed_events.log'


- name: Create daily cron job
  cron:
    name: "update fixity"
    minute: "0"
    hour: "5"
    job: "php {{ riprap_home }}/riprap/bin/console app:riprap:check_fixity --settings={{ private_file_dir }}/riprap_config/islandora_riprap_config.yml"

- name: restart apache
  service:
    name: apache2
    state: restarted



